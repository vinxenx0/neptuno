#docker-compose.yml
version: '3.8'

services:
  backend:
    build: ./backend
    restart: always
    env_file:
      - ./backend/.env  # Variables de entorno (base de datos, API keys, etc.)
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/app/data  # Persistencia de datos
      - backend_logs:/app/logs  # Logs de backend
    depends_on:
      - db
    networks:
      mynetwork:
        ipv4_address: 172.18.0.2

  frontend:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - frontend_logs:/app/logs  # Logs de frontend
    networks:
      mynetwork:
        ipv4_address: 172.18.0.3

  db:
    image: postgres:15
    restart: always
    env_file:
      - ./backend/.env  # Archivo con las credenciales de la DB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistencia de DB
    networks:
      mynetwork:
        ipv4_address: 172.18.0.4

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Configuraci√≥n del proxy inverso
      - ssl_certs:/etc/nginx/certs  # Certificados SSL
      - ./ssl:/etc/nginx/certs:ro 
    depends_on:
      - frontend
      - backend
    networks:
      mynetwork:
        ipv4_address: 172.18.0.5

networks:
  mynetwork:
    driver: bridge
    ipam:
      config:
        - subnet: "172.18.0.0/16"
          gateway: "172.18.0.1"

volumes:
  backend_data:
  backend_logs:
  frontend_logs:
  postgres_data:
  ssl_certs:
