Excelente, vamos hacerlo mas minimalista aun, haz estos cambios en el PoC:

- las replys serán dentro del propio timeline del usuario, es suficiente
- los puntos y los badges no se actualizan
- haz un diseño tipo bootstrap, centrado, sin ampliar mas el codigo
- mete los css en el mismo index
- resuelve este bug:  ❌ Error: module 'sdk.transactions.endpoints' has no attribute 'deduct_credit'

este es el service en el backend, implantalo en el sdk

def deduct_credit(db: Session, user_id: int, amount: int = 1):
    try:
        user = db.query(User).filter(User.id == user_id).with_for_update().first()
        if not user:
            raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Usuario no encontrado")
        if user.credits < amount:
            raise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail="No te quedan suficientes créditos")
        user.credits -= amount
        db.add(CreditTransaction(
            user_id=user_id,
            user_type='registered',  # Corrección clave
            amount=-amount,
            transaction_type="usage",
            description="Consulta realizada"  # Opcional, para consistencia con los logs
        ))
        db.commit()
        return user.credits
    except HTTPException as e:
        raise e
    except Exception as e:
        logger.error(f"Error al deducir créditos para usuario {user_id}: {str(e)}")
        raise HTTPException(status_code=500, detail="Error al deducir créditos")

- El diseño sera: una card con los datos del usuario, abajo el formulario para twet y luego el timeline con reply



