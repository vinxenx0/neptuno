Hola Grok, necesito de todo tu buen hacer como IA para que me ayudes en un proyecto prepardo?

Te explico a grandes rasgos antes de pasarte archivos en detalle.

Tengo un BaaS (backend as a service) en producción, se trata de un stack formado formado por una
api com backend junto a un frontend como dashboard para gestionar la api asi como un sitio web del producto.

Esta dando buenos resultados, su nombre en clave en esta fase es Neptuno.

En los proximos dias se acerca una feria importante del sector y quiero sacar una nueva versión
algunas mejoras sobre el codigo fuente que esta implantando en producción.

Recuerda siempre que Necesito tu mejor perfil de programador full stack FASTApi, Python, NextJS y SQLAlchemy con fuertes
nociones de diseño front UX/AI. Estoy seguro que eres capaz :D

Primero te introduciré en la herramienta con unos copys de marketing para que
veas lo que "vendemos" y despues ya te pasaré la información relevante sobre la arquitectura
del backend y del frontend para que lo entiendas y retengas para que pueda 
hacer los cambios requeridos.

NO te preocupes te repartiré la información en varias partes:

Parte 1: Introducción y configuración del enterno
Parte 2: api, schemas, modelos, etc
Parte 3: fronted: nextjs, dashboards, interfaces

Preparado? Empezamos!!

Parte 1: Introducción y configuración del enterno

Aqui tienes algunos de los copys de este producto que esta en marcha:


Neptuno es el stack mas completo para marketing, gamificacion y monetizacion
Neptuno es un starter kit full-stack diseñado para acelerar el desarrollo de campañas, landing pages y SaaS con autenticación, gamificación y pagos integrados.
Olvídate de construir desde cero: Neptuno te proporciona toda la infraestructura necesaria para seguir el recorrido del usuario desde el anonimato hasta la conversión.
Conectalo a tu frontend favorito (React, Angular, Vue, Svelte, Next.js) y expande su funcionalidad con librerías adicionales en FastAPI. 

Neptuno es un boilerplate backend listo para producción, diseñado para campañas, landing pages y micrositios. Conéctalo a cualquier frontend y gestiona el ciclo de vida del usuario desde el anonimato hasta la conversión.


✔️ Backend robusto en Python con FastAPI y OpenAPI
✔️ Autenticación y gestión de usuarios (OAuth2, JWT, roles y permisos avanzados)
✔️ Autenticación avanzada (OAuth2, JWT, roles y permisos)
✔️ Gamificación nativa (score, créditos, badges, niveles, desafíos)
✔️ Frontend Next.js optimizado para SEO y rendimiento
✔️ Gamificación integrada (score, créditos, badges, niveles)


LISTO PARA PRODUCCION
- Autenticacion y gestion de usuarios (oauth2, jwt, roles y permisos avanzados)
- Balanceo y escalabilidad (docker, nginx, gunicorn)
. SSL y seguridad (https, cors, csrf)

LISTO PARA DESARROLLO
- API RESTful basada en FastAPI (documentada en OpenAPI)
- Soporte para GraphQL y ampliable con más librerías
- Arquitectura modular y escalable
- Integración con cualquier frontend (React, Angular, Vue, Svelte, Next.js)
- Webhooks y eventos para conectar con cualquier sistema externo
- Integración con herramientas de marketing y CRM

LISTO PARA EXTRAER
- Usuario anonimo (lead) hasta cliente
- Tracking y automatizacion (segmentacion, triggers de conversion)
- Gamificacion nativa (score, creditos, badges, niveles, desafios)

LISTO PARA MONETIZAR
- Formas de pago, transacciones, suscripciones, modelos freemium


🚀 Neptuno: El Starter Kit Full-Stack para Marketing, Gamificación y Monetización

Preconfigurado con backend en Python y frontend en Next.js. Gratis, solo pagas por soporte, desarrollo a medida o consultoría.
🔥 Lanza tu aplicación en minutos con una API lista para producción

Neptuno es un starter kit full-stack diseñado para acelerar el desarrollo de campañas, landing pages y SaaS con autenticación, gamificación y pagos integrados.

Olvídate de construir desde cero: Neptuno te proporciona toda la infraestructura necesaria para seguir el recorrido del usuario desde el anonimato hasta la conversión.

✔️ Backend robusto en Python con FastAPI y OpenAPI
✔️ Frontend Next.js optimizado para SEO y rendimiento
✔️ Autenticación avanzada (OAuth2, JWT, roles y permisos)
✔️ Gamificación integrada (score, créditos, badges, niveles)
✔️ Pagos y monetización (suscripciones, pasarelas de pago, modelos freemium)
✔️ Gestión de usuarios y leads con tracking y automatización
🔗 100% modular e integrable con cualquier stack

Neptuno está diseñado para funcionar con cualquier frontend y expandirse según las necesidades de tu negocio:

🔹 Usa el frontend Next.js incluido o conéctalo a React, Angular, Vue o cualquier otro framework
🔹 API documentada en OpenAPI con compatibilidad para REST y GraphQL
🔹 Extiende el backend con FastAPI y otras librerías Python
🔹 Webhooks y eventos para integraciones con CRM, automatización y analytics
📡 Casos de uso ideales
🎮 Campañas con gamificación y recompensas

✔️ Atribuye puntos, créditos y badges en cada interacción
✔️ Define niveles, incentivos y desafíos personalizados
✔️ Automatiza la conversión de leads con triggers dinámicos
📈 Landing pages y micrositios con autenticación y pagos

✔️ Usuarios gestionados con OAuth2, JWT y roles avanzados
✔️ Monetización lista para usar con suscripciones y pasarelas de pago
✔️ Infraestructura optimizada para campañas de alto tráfico
💻 SaaS con lógica de negocio lista para escalar

✔️ Control total sobre usuarios, permisos y gestión de pagos
✔️ Integración con herramientas de marketing y CRM vía API
✔️ Modular y extensible para adaptarse a cualquier modelo de negocio
💰 Gratis. Solo pagas por lo que necesitas.

Neptuno es 100% gratuito. Solo pagas si necesitas:

💡 Soporte técnico premium para optimizar tu implementación
⚡ Desarrollo a medida para adaptar Neptuno a tu stack
📊 Consultoría estratégica para mejorar la conversión y retención de usuarios
🚀 Deja de perder tiempo en infraestructura y concéntrate en crecer

Bueno ya esta bien de marketing, no te quiero para esto, pero si queria que supieses
a quien va dirigido y cual es el foco del producto...

ahora vamos a ponernos manos a la obra! Pasamos a la segunda parte del punto 1: 

ENTORNO BASICO Y CONFIGURACIÓN DEL BAAS

Te explicaré como esta montado el stack.

Ve anotando muy bien a partir de ahora porque ya te voy a pasando archivos de produción

Primero de todo, el arbol de archivos

├── neptuno
│   ├── alembic.ini
│   ├── backend
│   │   ├── api
│   │   │   ├── __init__.py
│   │   │   └── v1
│   │   │       ├── anonymous_sessions.py
│   │   │       ├── api_logs.py
│   │   │       ├── auth.py
│   │   │       ├── auth.py.old
│   │   │       ├── credit_transactions.py
│   │   │       ├── endpoints.py
│   │   │       ├── error_logs.py
│   │   │       ├── gamification.py
│   │   │       ├── __init__.py
│   │   │       ├── integrations.py
│   │   │       ├── payment_providers.py
│   │   │       ├── payments.py
│   │   │       ├── site_settings.py
│   │   │       └── users.py
│   │   ├── app.log
│   │   ├── background.sh
│   │   ├── check_db.sh
│   │   ├── core
│   │   │   ├── config.py
│   │   │   ├── database.py
│   │   │   ├── __init__.py
│   │   │   ├── logging.py
│   │   │   └── security.py
│   │   ├── create_db.original.sql
│   │   ├── create_db.sql
│   │   ├── dependencies
│   │   │   ├── auth.py
│   │   │   ├── credits.py
│   │   │   └── __init__.py
│   │   ├── dev.db
│   │   ├── Dockerfile
│   │   ├── env.local
│   │   ├── env.prod
│   │   ├── env.vpn
│   │   ├── initial_data.py
│   │   ├── __init__.py
│   │   ├── main.py
│   │   ├── middleware
│   │   │   ├── credits_middleware.py
│   │   │   ├── gamification.py
│   │   │   ├── __init__.py
│   │   │   └── logging.py
│   │   ├── models
│   │   │   ├── allowed_origin.py
│   │   │   ├── credit_transaction.py
│   │   │   ├── error_log.py
│   │   │   ├── gamification.py
│   │   │   ├── guests.py
│   │   │   ├── guests.stage.py
│   │   │   ├── __init__.py
│   │   │   ├── integration.py
│   │   │   ├── log.py
│   │   │   ├── payment_method.py
│   │   │   ├── payment_provider.py
│   │   │   ├── site_settings.py
│   │   │   ├── token.py
│   │   │   └── user.py
│   │   ├── requirements.txt
│   │   ├── schemas
│   │   │   ├── anonymous_session.py
│   │   │   ├── api_log.py
│   │   │   ├── auth.py
│   │   │   ├── credit_transaction.py
│   │   │   ├── error_log.py
│   │   │   ├── gamification.py
│   │   │   ├── integration.py
│   │   │   ├── payment.py
│   │   │   ├── site_settings.py
│   │   │   └── user.py
│   │   ├── services
│   │   │   ├── auth_service.py
│   │   │   ├── credits_service.py
│   │   │   ├── gamification_service.py
│   │   │   ├── __init__.py
│   │   │   ├── integration_service.py
│   │   │   ├── origin_service.py
│   │   │   ├── payment_provider_service.py
│   │   │   ├── payment_service.py
│   │   │   ├── settings_service.py
│   │   │   └── user_service.py
│   │   ├── tasks.py
│   │   └── up_api.sh
│   ├── docker-compose.yml
│   ├── frontend
│   │   ├── deploy.sh
│   │   ├── Dockerfile
│   │   ├── env.local
│   │   ├── env.prod
│   │   ├── env.vbox
│   │   ├── eslint.config.mjs
│   │   ├── next.config.ts
│   │   ├── package.json
│   │   ├── package-lock.json
│   │   ├── postcss.config.js
│   │   ├── public
│   │   │   ├── apple-touch-icon.ico
│   │   │   ├── favicon-16x16.ico
│   │   │   ├── favicon.ico
│   │   │   └── logo.png
│   │   ├── reinstall.sh
│   │   ├── src
│   │   │   ├── app
│   │   │   │   ├── about
│   │   │   │   │   ├── layout.tsx
│   │   │   │   │   └── [page]
│   │   │   │   │       ├── contact.tsx
│   │   │   │   │       ├── page.tsx
│   │   │   │   │       ├── policy.tsx
│   │   │   │   │       ├── privacy.tsx
│   │   │   │   │       └── us.tsx
│   │   │   │   ├── admin
│   │   │   │   │   ├── dashboard
│
│   │   │   │   │   │   └── page.tsx
│   │   │   │   │   ├── registry
│   │   │   │   │   │   └── page.tsx
│   │   │   │   │   ├── reset-credits
│   │   │   │   │   │   └── page.tsx
│   │   │   │   │   └── users
│   │   │   │   │       └── page.tsx
│   │   │   │   ├── ejemplos
│   │   │   │   │   └── page.tsx
│   │   │   │   ├── global.color.css
│   │   │   │   ├── global.css
│   │   │   │   ├── layout.tsx
│   │   │   │   ├── page.bnw.tsx
│   │   │   │   ├── page.copy.tsx
│   │   │   │   ├── page.tsx
│   │   │   │   ├── rankings
│   │   │   │   │   └── page.tsx
│   │   │   │   ├── sitemap.ts.example
│   │   │   │   └── user
│   │   │   │       ├── auth
│   │   │   │       │   ├── layout.tsx
│   │   │   │       │   └── page.tsx
│   │   │   │       ├── badges
│   │   │   │       │   └── page.tsx
│   │   │   │       ├── change-password
│   │   │   │       │   └── page.tsx
│   │   │   │       ├── dashboard
│   │   │   │       ├── points
│   │   │   │       │   └── page.tsx
│   │   │   │       └── transactions
│   │   │   │           └── page.tsx
│   │   │   ├── components
│   │   │   │   ├── admin
│   │   │   │   │   ├── AdminUsersPage.copy.tsx
│   │   │   │   │   └── AdminUsersPage.tsx
│   │   │   │   ├── seo
│   │   │   │   │   ├── MetaTags.tsx
│   │   │   │   │   └── ShemaMarkup.tsx
│   │   │   │   ├── ui
│   │   │   │   │   └── index.tsx
│   │   │   │   └── web

│   │   │   │       ├── Footer.tsx
│   │   │   │       └── Navbar.tsx
│   │   │   └── lib
│   │   │       ├── api.ts
│   │   │       ├── auth
│   │   │       │   └── context.tsx
│   │   │       ├── payments
│   │   │       │   ├── example.tsx
│   │   │       │   ├── manager.ts
│   │   │       │   └── stripe.ts
│   │   │       ├── payments.ts
│   │   │       └── types.ts
│   │   ├── tailwind.config.js
│   │   ├── tsconfig.json
│   │   └── up_front.sh

└── tree.txt


Interesante eh? 

Ahora te voy a pasar archivos importantes de configuración que debes tener muy presentes
y que desde ya debes aprender, en cada uno de ellos va la ubicación y nombre del archivo
en la primera linea para que los ubiques en el arbol del proyecto

el contenido comentado en los archivos es porque son features que se implantarán en el futuro
o que ya no se usan, pero es interesante mantenerlas

comenzamos

// docker-compose.yml

# version: '3.8'

services:
  backend:
    #image: tucuenta/backend-fastapi:latest
    container_name: neptuno-stack
    build: ./backend
    ports: 
      - "8000:8000" # Accesible en https://192.168.18.70:8000
    #env_file: ./backend/.env  # Variables de entorno (base de datos, API keys, etc.)
    environment:
      - WORKERS_PER_CORE=0.5 # 1 worker para 2 CPUs
      - MAX_WORKERS=2 # 2 workers
      #- UVICORN_HOST=0.0.0.0
      #- UVICORN_PORT=8000
      #- MAX_THREADS=2  # 2 threads por worker
      #- MAX_REQUESTS=1000  # 1000 peticiones por worker
    volumes:
      - backend_data:/app/data  # Persistencia de datos
      - backend_logs:/app/logs  # Logs de backend
    depends_on:
      - db
    restart: always
    deploy: #  replicas: 2 # 2 instancias por defecto

    #logging:
    #  options:
    #    max-size: "10m"
    #    max-file: "3"
    networks:
      vboxnet:
        ipv4_address: 172.18.0.2 # IP fija para el backend

  frontend:
    #image: tucuenta/frontend-nextjs:latest
    container_name: neptuno-dashboard
    build: ./frontend
    ports:
      - "3000:3000"
    #env_file: ./backend/.env  # Variables de entorno (base de datos, API keys, etc.)      
    #environment: 
    # - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - frontend_logs:/app/logs  # Logs de frontend
    restart: always

    deploy: #  replicas: 2 # 2 instancias por defecto docker-compose up -d --scale fastapi=2 --scale nextjs=2

    #  resources:
    #    limits:
    #      cpus: '0.5'
    #      memory: 512M

    #logging:
    #  options:
    #    max-size: "10m"
    #    max-file: "3"

    #env_file: ./frontend/.env  # Cargar credenciales desde un archivo .env
    
    networks:
      vboxnet:
        ipv4_address: 172.18.0.3 # IP fija para el frontend

  db:
    image: mariadb:10.11 # image: mysql:8.0
    restart: always
    command: --innodb_buffer_pool_size=512M --query_cache_size=64M --tmp_table_size=64M # alta demanda
    container_name: neptuno-db
   
    #enviroment:
    #  - MARIADB_ROOT_PASSWORD="J8#jKpL2!mN9$qR5tXv7zY"
    #  - MARIADB_ROOT_PASSWORD_HASH="*CC6A5B2E4D1F9E8A7B3C5D2E1F0A8B7C6D5E4F3A2B1C0D9E8F7A6B5C4D3E2F1"
    #  - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD="no"  
    #  - MARIADB_RANDOM_ROOT_PASSWORD="yes"      
    #  - MYSQL_ROOT_PASSWORD: tu_contraseña_root
    #  - MYSQL_DATABASE: ciberpunk_db
    #  - MYSQL_USER: ciberpunk_user
    #  - MYSQL_PASSWORD: tu_contraseña_usuario
    
  #  env_file:
  #    - ./backend/.env
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql #- mysql_data:/var/lib/mysql  
    networks:
      vboxnet:
        ipv4_address: 172.18.0.4

#mariadb-replica:
#  image: mariadb:latest
#  environment:
#    MYSQL_REPLICATION_MODE: slave
#    MYSQL_MASTER_HOST: mariadb
#    MYSQL_ROOT_PASSWORD: tu_contraseña_root
#  volumes:
#    - mariadb-replica-data:/var/lib/mysql

#  db:
#    image: postgres:15
#    restart: always
#    env_file:
#     - ./backend/.env  # Archivo con las credenciales de la DB
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data  # Persistencia de DB
#    networks:
#      mynetwork:
#        ipv4_address: 172.18.0.4

#  nginx:
#    image: nginx:latest
#    restart: always
#    ports:
#      - "80:80"   # HTTP
#      - "443:443" # HTTPS
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Configuración del proxy inverso
#      - ssl_certs:/etc/nginx/certs  # Certificados SSL
#      - ./ssl:/etc/nginx/certs:ro 
#    depends_on:
#     - frontend
#      - backend
#    networks:
#      mynetwork:
#        ipv4_address: 172.18.0.5
#
networks:
  vboxnet:
    driver: bridge
    ipam:
      config:
        - subnet: "172.18.0.0/16"
          gateway: "172.18.0.1"


volumes:
  backend_data:
  backend_logs:
  frontend_logs:
  mariadb_data:


  ## Configuración de Nginx para el servidor Neptuno


#upstream backend {
#    server 127.0.0.1:8000;  # Puerto expuesto por Docker para FastAPI
#    keepalive 32;  # Conexiones persistentes
#}
#
#upstream frontend {
#    server 127.0.0.1:3000;  # Puerto expuesto por Docker para Next.js
#}
#


## balanceo de carga

#upstream nextjs_backend {
#    least_conn; # Usa el servidor con menos conexiones
#    server 127.0.0.1:3000;
#    server 127.0.0.1:3001; # Añade más instancias cuando escales
#}


server {


    server_name neptuno.ciberpunk.es;

#    root /var/www/neptuno/;
#    index index.html index.htm;


    listen 443 ssl http2; # managed by Certbot  # Habilita HTTP/2 para mejor rendimiento
    ssl_certificate /etc/letsencrypt/live/ciberpunk.es/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ciberpunk.es/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_prefer_server_ciphers on;
    #ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;

    # HSTS (opcional)
    #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    # Diffie-Hellman (perfect forward secrecy)
    #ssl_dhparam /etc/nginx/dhparam.pem;


    # Servir archivos estáticos de Next.js
    #location / {
    #    root /usr/share/nginx/html;
    #    index index.html;
    #    try_files $uri $uri/ /index.html;
    #}


    # Cache para archivos estáticos
    # location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot)$ {
    #    proxy_pass http://localhost:3000;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
    #    expires 30d; # Cache de 30 días
    #    access_log off; # Reduce escritura en logs
    #    add_header Cache-Control "public, no-transform";
    #}


    # Hacer proxy a la aplicación Next.js
    location / {
        proxy_pass http://172.18.0.3:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts ajustados para VPS de 2GB
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;

        #proxy_cache my_cache;
        #proxy_cache_valid 200 302 10m; # Cachea respuestas exitosas por 10 minutos
        #proxy_cache_valid 404 1m;


    }

    # Archivos estáticos (servidos directamente por Nginx)
    #location /public/ {
    #    alias /var/www/static/;
    #    expires 30d;
    #    access_log off;
    #    add_header Cache-Control "public";
    #}

    
    
    # API

    location /api/ {
        proxy_pass http://172.18.0.2:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

         # Headers CORS
        #aad_header 'Access-Control-Allow-Origin' 'https://172.18.0.3:3000';
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #add_header 'Access-Control-Allow-Headers' 'Content-Type';
        #add_header 'Access-Control-Allow-Credentials' 'true';

        #if ($request_method = 'OPTIONS') {
        #    add_header 'Access-Control-Allow-Origin' 'https://172.18.0.3:3000';
        #    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #    add_header 'Access-Control-Allow-Headers' 'Content-Type';
        #    return 204;
        #}

        # Ajustes para Gunicorn+Uvicorn
        #proxy_http_version 1.1;
        #proxy_set_header Connection "";
        #proxy_buffers 8 16k; # 4 256k;
        #proxy_buffer_size 128k; # Buffers para respuestas grandes
        #proxy_busy_buffers_size 256k;
        
        # Timeout largo para procesamiento
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;

        #proxy_cache my_cache;
        #proxy_cache_valid 200 302 10m; # Cachea respuestas exitosas por 10 minutos
        #proxy_cache_valid 404 1m;
    }

    # revisar porque pasa esto en Registry y Payments-providers
    location /v1/ {
        proxy_pass http://172.18.0.2:8000/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/docs/ {
        proxy_pass http://172.18.0.2:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

   location /openapi.json {
        proxy_pass http://172.18.0.2:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    access_log /var/log/nginx/neptuno.ciberpunk.es_access.log combined buffer=16k;
    error_log /var/log/nginx/neptuno.ciberpunk.es_error.log warn;

    # seguridad

    # Bloquear acceso a archivos ocultos
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # cache de archivos ¡ojo pagina en blanco!

    #location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    #    expires 30d;
    #    add_header Cache-Control "public, no-transform";
    #}
    
    #location ~* \.(woff|woff2|ttf|eot)$ {
    #    expires 30d;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(html)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(json)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(xml)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(txt)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(map)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
    #location ~* \.(xml)$ {
    #    expires 1h;
    #    add_header Cache-Control "public, no-transform";
    #}
}

server {
    listen 80;
    server_name neptuno.ciberpunk.es;
    return 301 https://$host$request_uri;
}



#server {
#    if ($host = neptuno.ciberpunk.es) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#    listen 80;
#    server_name neptuno.ciberpunk.es;
#    return 404; # managed by Certbot
#
#}



#server {
#    server_name neptuno.ciberpunk.es;

#    root /var/www/neptuno/;
#    index index.html index.htm;

#    location / {
#        try_files $uri $uri/ =404;
#    }

#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/ciberpunk.es/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/ciberpunk.es/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

#}

#server {
#    listen 443 ssl;
#    server_name neptuno.ciberpunk.es;
#
#    ssl_certificate /etc/nginx/certs/fullchain.pem;
#    ssl_certificate_key /etc/nginx/certs/privkey.pem;
#
#    location / {
#        proxy_pass https://frontend:3000;
#        proxy_set_header Host $host;
#    }
#
#    location /api {
#        proxy_pass http://backend:8000;
#        proxy_set_header Host $host;
#    }
#}

// backend/Dockerfile
# Usa una imagen ligera de Python
FROM python:3.10-slim

# Define el directorio de trabajo en el contenedor
WORKDIR /app

# Copia y instala las dependencias
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# Copia el código fuente
COPY . .

#RUN python3 initial_data.py

# Exponer el puerto 8000
EXPOSE 8000

# Usar Gunicorn con Uvicorn para producción
CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "--forwarded-allow-ips", "*", "main:app"]
#CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "main:app"]
#CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
#ExecStart=/var/www/ciberpunk.es/backend/venv/bin/gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000
#CMD ["sh", "-c", "python -m initial_data && uvicorn main:app --host 0.0.0.0 --port 8000"]

// frontend/Dockerfile
# Etapa de construcción
FROM node:18-alpine AS builder

WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Etapa de producción
FROM node:18-alpine AS production

WORKDIR /app
# Copiamos solo lo necesario desde el builder
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/out ./out
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules ./node_modules

# esto se mueve al otro contenedor
#COPY --from=builder nginx.conf /etc/nginx/nginx.conf
#COPY --from=builder nginx.conf /etc/nginx/sites-available/default
#RUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
#RUN systemctl restart nginx

# Instalamos serve para servir la aplicación estática
RUN npm install -g serve

EXPOSE 3000
#CMD ["serve", "-s", "out", "-l", "3000"]
#EXPOSE 3000
#EXPOSE 80
#CMD ["npm", "run", "start"]
#CMD ["nginx", "-g", "daemon off;"]
CMD ["npx", "next", "start"]


# frontend/package.json

{
    "name": "frontend",
    "version": "0.1.0",
    "private": true,
    "scripts": {
      "dev": "next dev",
      "build": "next build",
      "lint": "next lint",
      "export": "next export",
      "start": "npx next start",
      "clean": "rm -rf .next/ out/ node_modules/.cache/ && npm install"
    },
    "dependencies": {
      "@emotion/react": "^11.14.0",
      "@emotion/styled": "^11.14.0",
      "@mui/icons-material": "^6.4.8",
      "@mui/material": "^6.4.9",
      "@mui/x-data-grid": "^7.28.1",
      "axios": "^1.8.4",
      "framer-motion": "^12.5.0",
      "next": "^15.2.4",
      "react": "^19.0.0",
      "react-dom": "^19.0.0",
      "react-icons": "^5.5.0",
      "react-schemaorg": "^2.0.0",
      "schema-dts": "^1.1.5",
      "swr": "^2.3.3"
    },
    "devDependencies": {
      "@types/estree": "^1.0.7",
      "@types/node": "^22.13.14",
      "@types/react": "^19.0.12",
      "@types/react-dom": "^19",
      "autoprefixer": "^10.4.21",
      "eslint": "^9",
      "eslint-config-next": "15.2.3",
      "postcss": "^8.5.3",
      "tailwindcss": "^3.4.17",
      "typescript": "^5.8.2"
    }
  }


# next.config.ts


import type { NextConfig } from "next";

const nextConfig: NextConfig = {
 // Specified "headers" will not automatically work with "output: export". See more info here: https://nextjs.org/docs/messages/export-no-custom-routes
  output: "export", // Habilita el modo estático para `next export`
 
  trailingSlash: true, // Asegura que los archivos se sirvan correctamente
  images: {
    unoptimized: true, // Necesario para que `next/image` funcione en modo export
  },
  reactStrictMode: true,
  eslint: {
    ignoreDuringBuilds: true, // Optional: to ignore ESLint warnings during build
  },

  
  
  
  async headers() {
    return [
      {
        source: '/api/:path*',
        headers: [
          { key: 'Access-Control-Allow-Credentials', value: 'true' },
          { key: 'Access-Control-Allow-Origin', value: '*' },
          { key: 'Access-Control-Allow-Methods', value: 'GET,OPTIONS,PATCH,DELETE,POST,PUT' },
          { key: 'Access-Control-Allow-Headers', value: 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version' },
        ]
      }
    ]
  },
  // Para desarrollo
  allowedDevOrigins: [
    "*"
   // "https://localhost:3000",
    //"https://194.164.164.177:3000"
  ]

  


};

export default nextConfig;



//module.exports = {
//  env: {
//    NEXT_PUBLIC_API_URL: "https://172.20.0.4/api",
//  },
//};


# tsconfig.json

{
  "compilerOptions": {
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "types": ["next/types"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}



# backend/.env

ENVIRONMENT=development
PROJECT_NAME=neptuno
DEBUG=True
HOST=localhost
PORT=8000
SQLITE_UR=sqlite:///dev.db # dev
SECRET_KEY=tu_clave_secreta_aqui
MYSQL_URL=mysql+pymysql://user:password@172.18.0.4:3306/nombre_db # prod

DB_HOST=172.18.0.4
DB_PORT=3306
DB_USER=usuario
DB_PASSWORD=supersecreta
DB_NAME=neptuno

GOOGLE_CLIENT_ID=tu_client_id
GOOGLE_CLIENT_SECRET=tu_client_secret
GOOGLE_REDIRECT_URI=http://localhost:8000/v1/auth/login/google/callback
META_CLIENT_ID=tu_app_id
META_CLIENT_SECRET=tu_app_secret
META_REDIRECT_URI=http://localhost:8000/v1/auth/login/meta/callback

REDIS_HOST="localhost"
REDIS_PORT=6379


# frontend/.env

NEXT_PUBLIC_API_URL="http://localhost:8000" # en producción es el dominio del proxy nginx
SECRET_KEY="your_secret_key"


Bien por ahora? ¿Hechas en falta alguna configuración?


Neptuno, el nombre que le he dado al BaaS como ya sabes, es un stack de marketing listo para producción que aborda todo el funnel de ventas desde que entra el lead (usuarios anonimos en nuestro bacckend) hasta que convierte en cliente, estimulando su conversión gracias a nuestras librerias de puntos, creditos, insignias, rankings (y otros en el futuro) que ayuda a los equipos de marketing a convertir y enganchar mas rapido a los prospectos, nutrir clientes, etc.

Tecnicamente ya sabes lo que hemos montado: un sistema dockerizado de servidores balanceados, con replicas de la db, y con un proxy nginx.

Al utilzar FastAPI y OpenAPI con RESTful nuestra api vuela literalmente...

Como ves nuestro BaaS es modular en todas las capas y sentidos: desplegamos un docker para la api
y otro para el frontend, otro docker para el proxy que hace de comuniación entre ellos.

Esta arquitectura está ahora mismo corriendo en un servidor VPS, y el codigo que te he pasado
es el de producción.

Te adelanto que el frontend en Nextjs se comunica con la api para demostrar el usuario todas
las capacidades de la api, ademas de ofrecer un dashboard para usuarios, autenticacion etc..

En el siguiente punto entraré a pasarte todos los archivos importantes de la parte del backend

bien?

ah one more tehing ;)

Y como premio, te voy a pasar la api en formato openAPI porque se que este proyecto es de tu interes,
ahora entraremos mas de lleno en el backend

Si tienes dudas o consultas no tengas problema en preguntar, ahora te toca aprender bient oda la herramienta

{"openapi":"3.1.0","info":{"title":"Neptuno","version":"0.1.0"},"paths":{"/v1/auth/token":{"post":{"tags":["auth","auth"],"summary":"Login For Access Token","operationId":"login_for_access_token_v1_auth_token_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_for_access_token_v1_auth_token_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/register":{"post":{"tags":["auth","auth"],"summary":"Register","operationId":"register_v1_auth_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/password-reset":{"post":{"tags":["auth","auth"],"summary":"Reset Password","operationId":"reset_password_v1_auth_password_reset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordResetRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Reset Password V1 Auth Password Reset Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/password-reset/confirm":{"post":{"tags":["auth","auth"],"summary":"Confirm Password Reset","operationId":"confirm_password_reset_v1_auth_password_reset_confirm_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordResetConfirm"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Confirm Password Reset V1 Auth Password Reset Confirm Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/refresh":{"post":{"tags":["auth","auth"],"summary":"Refresh Token","operationId":"refresh_token_v1_auth_refresh_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/logout":{"post":{"tags":["auth","auth"],"summary":"Logout","operationId":"logout_v1_auth_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Logout V1 Auth Logout Post"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/v1/auth/login/{provider}":{"get":{"tags":["auth","auth"],"summary":"Get Provider Login Url","operationId":"get_provider_login_url_v1_auth_login__provider__get","parameters":[{"name":"provider","in":"path","required":true,"schema":{"type":"string","title":"Provider"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Provider Login Url V1 Auth Login  Provider  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/login/{provider}/callback":{"post":{"tags":["auth","auth"],"summary":"Provider Callback","operationId":"provider_callback_v1_auth_login__provider__callback_post","parameters":[{"name":"provider","in":"path","required":true,"schema":{"type":"string","title":"Provider"}},{"name":"code","in":"query","required":true,"schema":{"type":"string","title":"Code"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/auth/me/password":{"put":{"tags":["auth","auth"],"summary":"Change Password","operationId":"change_password_v1_auth_me_password_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Change Password V1 Auth Me Password Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/users/me":{"get":{"tags":["users","users"],"summary":"Get Me","operationId":"get_me_v1_users_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}}},"put":{"tags":["users","users"],"summary":"Update Me","operationId":"update_me_v1_users_me_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProfileRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users","users"],"summary":"Delete Me","operationId":"delete_me_v1_users_me_delete","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete Me V1 Users Me Delete"}}}}}}},"/v1/users/admin/users":{"get":{"tags":["users","users"],"summary":"Get All Users","operationId":"get_all_users_v1_users_admin_users_get","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get All Users V1 Users Admin Users Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/users/{user_id}":{"get":{"tags":["users","users"],"summary":"Get User","operationId":"get_user_v1_users__user_id__get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["users","users"],"summary":"Update User By Id","operationId":"update_user_by_id_v1_users__user_id__put","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProfileRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users","users"],"summary":"Delete User By Id","operationId":"delete_user_by_id_v1_users__user_id__delete","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"integer","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Delete User By Id V1 Users  User Id  Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/consultar":{"get":{"tags":["api"],"summary":"Consultar","operationId":"consultar_v1_api_consultar_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/api/reset-credits":{"post":{"tags":["api"],"summary":"Reset All Credits","operationId":"reset_all_credits_v1_api_reset_credits_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/api/example":{"get":{"tags":["api"],"summary":"Example Endpoint","operationId":"example_endpoint_v1_api_example_get","parameters":[{"name":"func","in":"query","required":true,"schema":{"title":"Func"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/api/test-credit-consumption":{"get":{"tags":["api"],"summary":"Test Credit Consumption","operationId":"test_credit_consumption_v1_api_test_credit_consumption_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/payments/purchase":{"post":{"tags":["payments","payments"],"summary":"Buy Credits","operationId":"buy_credits_v1_payments_purchase_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PurchaseRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PurchaseResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/payments/methods":{"get":{"tags":["payments","payments"],"summary":"List Methods","operationId":"list_methods_v1_payments_methods_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PaymentMethodResponse"},"type":"array","title":"Response List Methods V1 Payments Methods Get"}}}}}},"post":{"tags":["payments","payments"],"summary":"Add Method","operationId":"add_method_v1_payments_methods_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/payments/methods/{method_id}/default":{"put":{"tags":["payments","payments"],"summary":"Set Default","operationId":"set_default_v1_payments_methods__method_id__default_put","parameters":[{"name":"method_id","in":"path","required":true,"schema":{"type":"integer","title":"Method Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/payments/transactions":{"get":{"tags":["payments","payments"],"summary":"List Transactions","operationId":"list_transactions_v1_payments_transactions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CreditTransactionResponse"},"type":"array","title":"Response List Transactions V1 Payments Transactions Get"}}}}}}},"/v1/payments/methods/{method_id}":{"put":{"tags":["payments","payments"],"summary":"Update Method","operationId":"update_method_v1_payments_methods__method_id__put","parameters":[{"name":"method_id","in":"path","required":true,"schema":{"type":"integer","title":"Method Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["payments","payments"],"summary":"Delete Method","operationId":"delete_method_v1_payments_methods__method_id__delete","parameters":[{"name":"method_id","in":"path","required":true,"schema":{"type":"integer","title":"Method Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/settings/allowed-origins":{"post":{"tags":["site_settings","site_settings"],"summary":"Add Origin","operationId":"add_origin_v1_settings_allowed_origins_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddOriginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/settings/admin/config":{"get":{"tags":["site_settings","site_settings"],"summary":"Get Admin Config","operationId":"get_admin_config_v1_settings_admin_config_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SiteSettingResponse"},"type":"array","title":"Response Get Admin Config V1 Settings Admin Config Get"}}}}}},"post":{"tags":["site_settings","site_settings"],"summary":"Update Config","operationId":"update_config_v1_settings_admin_config_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateConfigRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/settings/{key}":{"put":{"tags":["site_settings","site_settings"],"summary":"Update Site Setting","operationId":"update_site_setting_v1_settings__key__put","parameters":[{"name":"key","in":"path","required":true,"schema":{"type":"string","title":"Key"}},{"name":"value","in":"query","required":true,"schema":{"type":"string","title":"Value"}},{"name":"description","in":"query","required":false,"schema":{"type":"string","title":"Description"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["site_settings","site_settings"],"summary":"Get Site Setting","operationId":"get_site_setting_v1_settings__key__get","parameters":[{"name":"key","in":"path","required":true,"schema":{"type":"string","title":"Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/integrations/":{"get":{"tags":["integrations","integrations"],"summary":"List Integrations","operationId":"list_integrations_v1_integrations__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}},"post":{"tags":["integrations","integrations"],"summary":"Create Integration","operationId":"create_integration_v1_integrations__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIntegrationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/errors/":{"get":{"tags":["Errors","Errors"],"summary":"Get Error Logs","operationId":"get_error_logs_v1_errors__get","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Error Logs V1 Errors  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sessions/":{"get":{"tags":["Sessions","Sessions"],"summary":"Get Anonymous Sessions","operationId":"get_anonymous_sessions_v1_sessions__get","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Anonymous Sessions V1 Sessions  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/sessions/credits":{"get":{"tags":["Sessions","Sessions"],"summary":"Get Anonymous Credits","operationId":"get_anonymous_credits_v1_sessions_credits_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Anonymous Credits V1 Sessions Credits Get"}}}}}}},"/v1/transactions/":{"get":{"tags":["Transactions","Transactions"],"summary":"Get Credit Transactions","operationId":"get_credit_transactions_v1_transactions__get","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Credit Transactions V1 Transactions  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/logs/":{"get":{"tags":["Logs","Logs"],"summary":"Get Api Logs","operationId":"get_api_logs_v1_logs__get","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":10,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Api Logs V1 Logs  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/rankings":{"get":{"tags":["Gamification","Gamification"],"summary":"Get Rankings Endpoint","operationId":"get_rankings_endpoint_v1_gamification_rankings_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RankingResponse"},"type":"array","title":"Response Get Rankings Endpoint V1 Gamification Rankings Get"}}}}}}},"/v1/gamification/events":{"get":{"tags":["Gamification","Gamification"],"summary":"Get My Events","operationId":"get_my_events_v1_gamification_events_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GamificationEventResponse"},"type":"array","title":"Response Get My Events V1 Gamification Events Get"}}}}}},"post":{"tags":["Gamification","Gamification"],"summary":"Create Event","operationId":"create_event_v1_gamification_events_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GamificationEventCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/me":{"get":{"tags":["Gamification","Gamification"],"summary":"Get My Gamification","operationId":"get_my_gamification_v1_gamification_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UserGamificationResponse"},"type":"array","title":"Response Get My Gamification V1 Gamification Me Get"}}}}}}},"/v1/gamification/events/{event_id}":{"get":{"tags":["Gamification","Gamification"],"summary":"Get Event Details Endpoint","operationId":"get_event_details_endpoint_v1_gamification_events__event_id__get","parameters":[{"name":"event_id","in":"path","required":true,"schema":{"type":"integer","title":"Event Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GamificationEventResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/event-types/{event_type_id}/badges":{"get":{"tags":["Gamification","Gamification"],"summary":"Get Badges For Event Endpoint","operationId":"get_badges_for_event_endpoint_v1_gamification_event_types__event_type_id__badges_get","parameters":[{"name":"event_type_id","in":"path","required":true,"schema":{"type":"integer","title":"Event Type Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BadgeResponse"},"title":"Response Get Badges For Event Endpoint V1 Gamification Event Types  Event Type Id  Badges Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/progress/{event_type_id}":{"get":{"tags":["Gamification","Gamification"],"summary":"Get User Progress For Event Endpoint","operationId":"get_user_progress_for_event_endpoint_v1_gamification_progress__event_type_id__get","parameters":[{"name":"event_type_id","in":"path","required":true,"schema":{"type":"integer","title":"Event Type Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGamificationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/event-types":{"get":{"tags":["Gamification","Gamification"],"summary":"Get Event Types Endpoint","operationId":"get_event_types_endpoint_v1_gamification_event_types_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EventTypeResponse"},"type":"array","title":"Response Get Event Types Endpoint V1 Gamification Event Types Get"}}}}}},"post":{"tags":["Gamification","Gamification"],"summary":"Create Event Type Endpoint","operationId":"create_event_type_endpoint_v1_gamification_event_types_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventTypeCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventTypeResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/event-types/{event_type_id}":{"put":{"tags":["Gamification","Gamification"],"summary":"Update Event Type Endpoint","operationId":"update_event_type_endpoint_v1_gamification_event_types__event_type_id__put","parameters":[{"name":"event_type_id","in":"path","required":true,"schema":{"type":"integer","title":"Event Type Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventTypeCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventTypeResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Gamification","Gamification"],"summary":"Delete Event Type Endpoint","operationId":"delete_event_type_endpoint_v1_gamification_event_types__event_type_id__delete","parameters":[{"name":"event_type_id","in":"path","required":true,"schema":{"type":"integer","title":"Event Type Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/badges":{"get":{"tags":["Gamification","Gamification"],"summary":"Get Badges Endpoint","operationId":"get_badges_endpoint_v1_gamification_badges_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BadgeResponse"},"type":"array","title":"Response Get Badges Endpoint V1 Gamification Badges Get"}}}}}},"post":{"tags":["Gamification","Gamification"],"summary":"Create Badge Endpoint","operationId":"create_badge_endpoint_v1_gamification_badges_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/gamification/badges/{badge_id}":{"put":{"tags":["Gamification","Gamification"],"summary":"Update Badge Endpoint","operationId":"update_badge_endpoint_v1_gamification_badges__badge_id__put","parameters":[{"name":"badge_id","in":"path","required":true,"schema":{"type":"integer","title":"Badge Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Gamification","Gamification"],"summary":"Delete Badge Endpoint","operationId":"delete_badge_endpoint_v1_gamification_badges__badge_id__delete","parameters":[{"name":"badge_id","in":"path","required":true,"schema":{"type":"integer","title":"Badge Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/payment-providers/":{"get":{"tags":["Payment Providers","Payment Providers"],"summary":"Obtener proveedores de pago","description":"Obtiene la lista de proveedores de pago disponibles","operationId":"get_providers_v1_payment_providers__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PaymentProviderResponse"},"type":"array","title":"Response Get Providers V1 Payment Providers  Get"}}}}}},"post":{"tags":["Payment Providers","Payment Providers"],"summary":"Crear nuevo proveedor","description":"Crea un nuevo proveedor de pagos (solo administradores)","operationId":"create_provider_v1_payment_providers__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentProviderCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentProviderResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/payment-providers/{provider_id}":{"put":{"tags":["Payment Providers","Payment Providers"],"summary":"Actualizar proveedor","description":"Actualiza un proveedor de pagos existente (solo administradores)","operationId":"update_provider_v1_payment_providers__provider_id__put","parameters":[{"name":"provider_id","in":"path","required":true,"schema":{"type":"integer","title":"Provider Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentProviderCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentProviderResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Payment Providers","Payment Providers"],"summary":"Eliminar proveedor","description":"Elimina un proveedor de pagos (solo administradores)","operationId":"delete_provider_v1_payment_providers__provider_id__delete","parameters":[{"name":"provider_id","in":"path","required":true,"schema":{"type":"integer","title":"Provider Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/health":{"get":{"summary":"Health Check","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Root","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/no-login/":{"get":{"summary":"No Login Test","description":"Endpoint para probar la API sin necesidad de login.\nConsume créditos si están activos.","operationId":"no_login_test_no_login__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/restricted":{"get":{"summary":"Restricted Test","description":"Endpoint restringido que requiere login.\nConsume créditos si están activos.","operationId":"restricted_test_restricted_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/whoami":{"get":{"summary":"Get Info","operationId":"get_info_info_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/test-event":{"post":{"summary":"Test Gamification Event","operationId":"test_gamification_event_test_event_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GamificationEventResponse"}}}}}}}},"components":{"schemas":{"AddOriginRequest":{"properties":{"origin":{"type":"string","title":"Origin"}},"type":"object","required":["origin"],"title":"AddOriginRequest"},"BadgeCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"event_type_id":{"type":"integer","title":"Event Type Id"},"required_points":{"type":"integer","title":"Required Points"},"user_type":{"type":"string","title":"User Type","default":"both"}},"type":"object","required":["name","event_type_id","required_points"],"title":"BadgeCreate"},"BadgeResponse":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"event_type_id":{"type":"integer","title":"Event Type Id"},"required_points":{"type":"integer","title":"Required Points"},"user_type":{"type":"string","title":"User Type","default":"both"},"id":{"type":"integer","title":"Id"}},"type":"object","required":["name","event_type_id","required_points","id"],"title":"BadgeResponse"},"Body_login_for_access_token_v1_auth_token_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_for_access_token_v1_auth_token_post"},"ChangePasswordRequest":{"properties":{"current_password":{"type":"string","title":"Current Password"},"new_password":{"type":"string","title":"New Password"}},"type":"object","required":["current_password","new_password"],"title":"ChangePasswordRequest"},"CreateIntegrationRequest":{"properties":{"name":{"type":"string","title":"Name"},"webhook_url":{"type":"string","title":"Webhook Url"},"event_type":{"type":"string","title":"Event Type"}},"type":"object","required":["name","webhook_url","event_type"],"title":"CreateIntegrationRequest"},"CreditTransactionResponse":{"properties":{"id":{"type":"integer","title":"Id"},"amount":{"type":"integer","title":"Amount"},"transaction_type":{"type":"string","title":"Transaction Type"},"payment_amount":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Payment Amount"},"payment_method":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Payment Method"},"payment_status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Payment Status"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"}},"type":"object","required":["id","amount","transaction_type","timestamp"],"title":"CreditTransactionResponse"},"EventTypeCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"points_per_event":{"type":"integer","title":"Points Per Event","default":0}},"type":"object","required":["name"],"title":"EventTypeCreate"},"EventTypeResponse":{"properties":{"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"points_per_event":{"type":"integer","title":"Points Per Event","default":0},"id":{"type":"integer","title":"Id"}},"type":"object","required":["name","id"],"title":"EventTypeResponse"},"GamificationEventCreate":{"properties":{"event_type_id":{"type":"integer","title":"Event Type Id"}},"type":"object","required":["event_type_id"],"title":"GamificationEventCreate"},"GamificationEventResponse":{"properties":{"event_type_id":{"type":"integer","title":"Event Type Id"},"id":{"type":"integer","title":"Id"},"user_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"User Id"},"session_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Session Id"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"}},"type":"object","required":["event_type_id","id","user_id","session_id","timestamp"],"title":"GamificationEventResponse"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"PasswordResetConfirm":{"properties":{"token":{"type":"string","title":"Token"},"new_password":{"type":"string","title":"New Password"}},"type":"object","required":["token","new_password"],"title":"PasswordResetConfirm"},"PasswordResetRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"PasswordResetRequest"},"PaymentMethodCreate":{"properties":{"payment_type":{"type":"string","title":"Payment Type"},"details":{"type":"string","title":"Details"},"is_default":{"type":"boolean","title":"Is Default","default":false}},"type":"object","required":["payment_type","details"],"title":"PaymentMethodCreate"},"PaymentMethodResponse":{"properties":{"id":{"type":"integer","title":"Id"},"payment_type":{"type":"string","title":"Payment Type"},"details":{"type":"string","title":"Details"},"is_default":{"type":"boolean","title":"Is Default"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["id","payment_type","details","is_default","created_at","updated_at"],"title":"PaymentMethodResponse"},"PaymentProviderCreate":{"properties":{"name":{"type":"string","title":"Name"},"active":{"type":"boolean","title":"Active","default":true}},"type":"object","required":["name"],"title":"PaymentProviderCreate"},"PaymentProviderResponse":{"properties":{"name":{"type":"string","title":"Name"},"active":{"type":"boolean","title":"Active","default":true},"id":{"type":"integer","title":"Id"}},"type":"object","required":["name","id"],"title":"PaymentProviderResponse"},"PurchaseRequest":{"properties":{"credits":{"type":"integer","title":"Credits"},"payment_amount":{"type":"number","title":"Payment Amount"},"payment_method":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Payment Method","default":"stripe"}},"type":"object","required":["credits","payment_amount"],"title":"PurchaseRequest"},"PurchaseResponse":{"properties":{"transaction_id":{"type":"integer","title":"Transaction Id"},"credits_added":{"type":"integer","title":"Credits Added"},"new_balance":{"type":"integer","title":"New Balance"}},"type":"object","required":["transaction_id","credits_added","new_balance"],"title":"PurchaseResponse"},"RankingResponse":{"properties":{"username":{"type":"string","title":"Username"},"points":{"type":"integer","title":"Points"},"badges_count":{"type":"integer","title":"Badges Count"},"user_type":{"type":"string","title":"User Type"}},"type":"object","required":["username","points","badges_count","user_type"],"title":"RankingResponse"},"RefreshTokenRequest":{"properties":{"refresh_token":{"type":"string","title":"Refresh Token"}},"type":"object","required":["refresh_token"],"title":"RefreshTokenRequest"},"RegisterRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"ciudad":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ciudad"},"website":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Website"}},"type":"object","required":["email","username","password"],"title":"RegisterRequest"},"SiteSettingResponse":{"properties":{"key":{"type":"string","title":"Key"},"value":{"type":"string","title":"Value"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"tag":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tag"},"id":{"type":"integer","title":"Id"},"updated_by":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Updated By"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["key","value","id","updated_at"],"title":"SiteSettingResponse"},"TokenResponse":{"properties":{"access_token":{"type":"string","title":"Access Token"},"refresh_token":{"type":"string","title":"Refresh Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","refresh_token","token_type"],"title":"TokenResponse"},"UpdateConfigRequest":{"properties":{"key":{"type":"string","title":"Key"},"value":{"anyOf":[{"type":"object"},{"items":{},"type":"array"},{"type":"integer"},{"type":"string"}],"title":"Value"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"type":"object","required":["key","value"],"title":"UpdateConfigRequest"},"UpdateProfileRequest":{"properties":{"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"username":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Username"},"ciudad":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ciudad"},"website":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Website"}},"type":"object","title":"UpdateProfileRequest"},"UserGamificationResponse":{"properties":{"points":{"type":"integer","title":"Points"},"badge_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Badge Id"},"event_type_id":{"type":"integer","title":"Event Type Id"},"user_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"User Id"},"session_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Session Id"},"event_type":{"$ref":"#/components/schemas/EventTypeResponse"},"badge":{"anyOf":[{"$ref":"#/components/schemas/BadgeResponse"},{"type":"null"}]}},"type":"object","required":["points","badge_id","event_type_id","user_id","session_id","event_type","badge"],"title":"UserGamificationResponse"},"UserResponse":{"properties":{"id":{"type":"integer","title":"Id"},"email":{"type":"string","format":"email","title":"Email"},"username":{"type":"string","title":"Username"},"rol":{"type":"string","title":"Rol"},"activo":{"type":"boolean","title":"Activo"},"subscription":{"type":"string","title":"Subscription"},"ciudad":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ciudad"},"website":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Website"},"credits":{"type":"integer","title":"Credits"},"create_at":{"type":"string","format":"date-time","title":"Create At"},"last_ip":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Last Ip"}},"type":"object","required":["id","email","username","rol","activo","subscription","credits","create_at"],"title":"UserResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/v1/auth/token"}}}}}}


















